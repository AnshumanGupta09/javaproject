/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app_pack;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Properties;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author Anshuman
 */
public class ForgotPassword extends javax.swing.JFrame {
    static String old_mail ="";
    static String new_mail = "";
    static String OTP = "";
    PreparedStatement stm;
    Connection con;
    static ResultSet data;

    /**
     * Creates new form ForgotPassword
     */
    public ForgotPassword() {
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/college_mgt";
            String user = "root";
            String password = "0000";
            con = DriverManager.getConnection(url,user,password);
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Cannot connect to the database.\n Please ask the developer to take care of this bug.","ERROR", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
            System.exit(0);
        }
        setIconImage();
        initComponents();
    }
    private void setIconImage() 
    {   
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("a1.png")));        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        refer = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        mail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        otp = new javax.swing.JTextField();
        verifyotp = new javax.swing.JButton();
        sendotp = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pass2 = new javax.swing.JPasswordField();
        pass = new javax.swing.JPasswordField();
        update = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(550, 150));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 237, 219));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(221, 117, 110));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Forgot Password");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 55));

        jPanel3.setBackground(new java.awt.Color(255, 237, 219));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setBackground(new java.awt.Color(242, 242, 61));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Registration ID");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 250, 50));

        refer.setBackground(new java.awt.Color(255, 198, 172));
        refer.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        refer.setToolTipText("Enter Registration ID.");
        refer.setMargin(new java.awt.Insets(1, 3, 1, 1));
        refer.setOpaque(true);
        refer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                referKeyPressed(evt);
            }
        });
        jPanel3.add(refer, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 290, 50));

        jLabel4.setBackground(new java.awt.Color(242, 242, 61));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Email ID");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 210, 50));

        mail.setBackground(new java.awt.Color(255, 198, 172));
        mail.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        mail.setToolTipText("Enter valid email id to receive the OTP to proceed further. ");
        mail.setMargin(new java.awt.Insets(1, 3, 1, 1));
        mail.setOpaque(true);
        mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailActionPerformed(evt);
            }
        });
        mail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mailKeyReleased(evt);
            }
        });
        jPanel3.add(mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 290, 50));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("O.T.P.");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 210, 50));

        otp.setBackground(new java.awt.Color(255, 237, 219));
        otp.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        otp.setEnabled(false);
        otp.setMargin(new java.awt.Insets(1, 3, 1, 1));
        otp.setOpaque(true);
        otp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpActionPerformed(evt);
            }
        });
        otp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                otpKeyPressed(evt);
            }
        });
        jPanel3.add(otp, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 290, 50));

        verifyotp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        verifyotp.setText("Verify OTP");
        verifyotp.setEnabled(false);
        verifyotp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyotpActionPerformed(evt);
            }
        });
        jPanel3.add(verifyotp, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 280, -1, -1));

        sendotp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        sendotp.setText("Send  OTP");
        sendotp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendotpActionPerformed(evt);
            }
        });
        jPanel3.add(sendotp, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 61, 700, 320));

        jPanel4.setBackground(new java.awt.Color(255, 237, 219));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("New Password");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 210, 50));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel3.setText("Confirm Password");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 270, 50));

        pass2.setText("password000000000000000000");
        pass2.setEnabled(false);
        pass2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pass2FocusGained(evt);
            }
        });
        jPanel4.add(pass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 290, 50));

        pass.setText("password000000000000000000");
        pass.setEnabled(false);
        pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passFocusGained(evt);
            }
        });
        jPanel4.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 290, 50));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 387, 700, 199));

        update.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        update.setText("Update Password");
        update.setBorder(null);
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.setEnabled(false);
        update.setMargin(new java.awt.Insets(2, 2, 2, 2));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 630, 244, 52));

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("Return to Login Page.");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 650, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void otpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otpActionPerformed

    private void otpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otpKeyPressed
        // TODO add your handling code here:
        String str = otp.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                str = str.substring(0,str.length()-1);
                System.out.println(str.length());
                otp.setText(str);

            }
            if(str.length() <= 6)
            {
                verifyotp.setEnabled(false);
            }
            return;
        }
        if(str.length() == 5){
            verifyotp.setEnabled(true);

        }

        if(str.length() < 6){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
                otp.setText(otp.getText() + "" + evt.getKeyChar());
            }
        }

        otp.setEditable(false);
    }//GEN-LAST:event_otpKeyPressed

    private void verifyotpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyotpActionPerformed
        // TODO add your handling code here:
        if(otp.getText().equals(OTP))
        {
            sendotp.setEnabled(false);
            verifyotp.setEnabled(false);
            otp.setEditable(false);
            pass.setEnabled(true);
            pass.setBackground(new java.awt.Color(255, 198, 172));
            pass2.setEnabled(true);
            pass2.setBackground(new java.awt.Color(255, 198, 172));
            update.setEnabled(true);
        }
        else
        {
            JOptionPane.showMessageDialog(this,"O.T.P. not valid!","Alert",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_verifyotpActionPerformed
    
    private  void start_mail(String to) {
        old_mail = to;
        Random random = new Random();
        int random_otp = random.nextInt(100000, 999999);
        OTP = "" + random_otp;
        
        String msg = "Hello! User. Your one time OTP for password updation is   '" + random_otp + "'. Do  not share it with others. This is valid for only 5 minutes.";
        String subject = "I.I.P.P.  :  Email Updation";
        String from = "i.i.p.p.confromation@gmail.com";        
        send_text_email(msg,subject,to,from);
        
    }

    private void send_text_email(String msg, String subject, String to, String from) 
    {
        Properties properties = System.getProperties();        
        // host setup
        
        properties.put("mail.smtp.host","smtp.gmail.com");
        properties.put("mail.smtp.port","465");
        properties.put("mail.smtp.ssl.enable","true");
        properties.put("mail.smtp.auth","true");
        
        // getting session object
        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("i.i.p.p.confromation@gmail.com", "cgmyrbpnqkluksxk");
            }
        });
        //session.setDebug(true);
        MimeMessage m = new MimeMessage(session);
        
        try
        {   
            m.setFrom(from);
            m.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            m.setSubject(subject);
            m.setText(msg);            
            Transport.send(m);                    
        }
        catch(Exception e)
        {
//            javax.mail.SendFailedException: Invalid Addresses;
            JOptionPane.showMessageDialog(this,"Invalid Email Provided.","Alert",JOptionPane.ERROR_MESSAGE);
            
            System.out.println(e);            
        }       
    }
    
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        if(refer.getText().length() == 0 || pass.getText().length() == 0|| pass2.getText().length() == 0)
        {
            JOptionPane.showMessageDialog(this,"Data Field cannot be empty.","Alert",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!pass.getText().equals(pass2.getText()))
        {
            JOptionPane.showMessageDialog(this,"Passwords donot match with each other.","Alert",JOptionPane.ERROR_MESSAGE);
            return;
        }
        submit_data();
        JOptionPane.showMessageDialog(this,"Your password has been resetted.\n You are now being directed to Login Page.\n Login there to Enter Dashboard.","Info",JOptionPane.NO_OPTION);
        user_login ul = new user_login();
        ul.show();
        dispose();
    }//GEN-LAST:event_updateActionPerformed

    private void sendotpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendotpActionPerformed
        // TODO add your handling code here:
        String email = mail.getText();
        if(email.length() == 0)
        {
            JOptionPane.showMessageDialog(this,"First Enter your email","Alert",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            sendotp.setEnabled(false);
            otp.setEnabled(true);
            otp.setBackground(new java.awt.Color(255, 198, 172));
            
            if(check_valid_eamil())
            {
                start_mail(email);
               
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid Email provided by you.","Alter",JOptionPane.ERROR_MESSAGE);
            }
            

        }
    }//GEN-LAST:event_sendotpActionPerformed
    
    private boolean check_valid_eamil()
    {
        String sql = "select email from signup where referid = " + refer.getText();
        try {
            stm = con.prepareStatement(sql);
            data = stm.executeQuery(sql);
            String email;
            if(!data.next())
            {
                JOptionPane.showMessageDialog(this,"Invalid Registration ID","Alter",JOptionPane.ERROR_MESSAGE);
                return false;
            }
            if(data.next())
            {
                email = data.getString(1);
                System.out.println("Data is not ok");
                if(!(mail.getText().equals(email)))
                {
                    return false;
                }
            }
        } 
        catch (SQLException e) 
        {
            //System.out.println(e);
            JOptionPane.showMessageDialog(this,"Error while fetching data..","Alert",JOptionPane.ERROR_MESSAGE);
        }
            //stm = con.prepareStatement(sql);
        return true;        
    }
    private void mailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mailKeyReleased
        // TODO add your handling code here:
        new_mail = mail.getText();
        //System.out.println(new_mail);
        if(!new_mail.equals(old_mail))
        {
            //System.out.println(new_mail);
            old_mail = new_mail;
            otp.setEnabled(false);
            sendotp.setEnabled(true);
        }
    }//GEN-LAST:event_mailKeyReleased

    private void mailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mailActionPerformed

    private void referKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_referKeyPressed
        // TODO add your handling code here:
        String str = refer.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                str = str.substring(0,str.length()-1);
                refer.setText(str);

            }
        }
        if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
        {
            refer.setText(refer.getText() + "" + evt.getKeyChar());
        }
        
        refer.setEditable(false);
    }//GEN-LAST:event_referKeyPressed

    private void passFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFocusGained
        // TODO add your handling code here:
        pass.setText("");
        pass.setBackground(new java.awt.Color(255, 198, 172));
    }//GEN-LAST:event_passFocusGained

    private void pass2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pass2FocusGained
        // TODO add your handling code here:
        pass2.setText("");
        pass2.setBackground(new java.awt.Color(255, 198, 172));
    }//GEN-LAST:event_pass2FocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        user_login us = new user_login();
        us.show();
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void submit_data() {
        try
        {
            String querry= "update signup set password = '" + pass.getText() + "' where referid = '" + refer.getText()  + "' ;";
            stm = con.prepareStatement(querry);
            stm.execute();      
        }
        catch(Exception e)
        {
            if("class java.sql.SQLIntegrityConstraintViolationException".equals(e.getClass().toString()))
            {
                JOptionPane.showMessageDialog(this,"Same Registration ID found in database.","ALERT",JOptionPane.ERROR_MESSAGE);
                return;
                
            }
            JOptionPane.showMessageDialog(this,"Errro while submitting response.","Info",JOptionPane.NO_OPTION);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField mail;
    private javax.swing.JTextField otp;
    private javax.swing.JPasswordField pass;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JTextField refer;
    private javax.swing.JButton sendotp;
    private javax.swing.JButton update;
    private javax.swing.JButton verifyotp;
    // End of variables declaration//GEN-END:variables
}
