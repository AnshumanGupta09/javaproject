/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app_pack;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 2004d
 */
public class AdmissionForm extends javax.swing.JFrame {
    
    static DefaultTableModel tblmodel;
    String DOB;
    InputStream ips;
    String state_selected;
    int Year_DOB = 0;
    String city_selected;
    
    // database connection code    
    PreparedStatement stm;
    Connection con;
    static ResultSet data;
    
    public AdmissionForm() {
        //Image img = new Image("D:\\college_mgt\\src\\app_pack\\clglogo.png");
        try
        {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/college_mgt";
        String user = "root";
        String password = "0000";
        con = DriverManager.getConnection(url,user,password);
//        String q1 = "select * from data1";
//        sm = (PreparedStatement) con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Cannot connect to the database.\n Please ask the developer to take care of this bug.","ERROR", JOptionPane.ERROR_MESSAGE);
            //dispose();
            System.out.println(e);
            System.exit(0);
        }
        setIconImage();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.commit
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        p1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        p2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        course = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        stuName = new javax.swing.JTextField();
        momName = new javax.swing.JTextField();
        dadName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        phone1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        imglabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dob = new com.toedter.calendar.JDateChooser();
        p3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        phone2 = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        adhar = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        state = new javax.swing.JComboBox<>();
        city = new javax.swing.JComboBox<>();
        p4 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        address1 = new javax.swing.JTextField();
        city1 = new javax.swing.JTextField();
        pin1 = new javax.swing.JTextField();
        state1 = new javax.swing.JTextField();
        address2 = new javax.swing.JTextField();
        city2 = new javax.swing.JTextField();
        pin2 = new javax.swing.JTextField();
        state2 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        submit = new javax.swing.JButton();
        p5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        grad = new javax.swing.JComboBox<>();
        rollG = new javax.swing.JTextField();
        perG = new javax.swing.JTextField();
        roll12 = new javax.swing.JTextField();
        roll10 = new javax.swing.JTextField();
        sch10 = new javax.swing.JTextField();
        sch12 = new javax.swing.JTextField();
        schG = new javax.swing.JTextField();
        om10 = new javax.swing.JTextField();
        om12 = new javax.swing.JTextField();
        omG = new javax.swing.JTextField();
        tm10 = new javax.swing.JTextField();
        tm12 = new javax.swing.JTextField();
        tmG = new javax.swing.JTextField();
        y10 = new javax.swing.JTextField();
        y12 = new javax.swing.JTextField();
        yG = new javax.swing.JTextField();
        per10 = new javax.swing.JTextField();
        per12 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admission Form");
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1450, 1628));
        setResizable(false);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1400, 950));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        p1.setBackground(new java.awt.Color(255, 255, 255));
        p1.setPreferredSize(new java.awt.Dimension(1409, 300));
        p1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setBackground(new java.awt.Color(204, 204, 204));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 45)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("International Institute Of Professional Paradigm");
        jLabel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 1174, -1));
        jLabel10.getAccessibleContext().setAccessibleParent(jPanel3);

        jLabel11.setBackground(new java.awt.Color(153, 255, 255));
        jLabel11.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Online Registration Form");
        p1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 269, -1));
        p1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 0, 138, 172));

        jPanel3.add(p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 1355, 178));

        p2.setBackground(new java.awt.Color(255, 204, 204));
        p2.setOpaque(false);
        p2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel13.setText("    Course");
        jLabel13.setAlignmentY(2.0F);
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setOpaque(true);
        p2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 6, 151, 34));

        course.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        course.setMaximumRowCount(10);
        course.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----NONE-----", "BCA", "BBA", "BSc", "BCom", "BA", "B Tech", "MCA", "MBA", "MSc", "M Com", "MTech" }));
        course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseActionPerformed(evt);
            }
        });
        p2.add(course, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 8, 430, 34));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel14.setText("  Applicant Name");
        jLabel14.setOpaque(true);
        p2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 62, 151, 34));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel15.setText("   Mother's Name");
        jLabel15.setOpaque(true);
        p2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 117, 151, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel16.setText("   Father's Name");
        jLabel16.setOpaque(true);
        p2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 151, 34));

        stuName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        stuName.setToolTipText("name of applicant.");
        stuName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stuNameFocusGained(evt);
            }
        });
        stuName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stuNameKeyReleased(evt);
            }
        });
        p2.add(stuName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 430, 34));

        momName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        momName.setToolTipText("name of applicant's mother.");
        momName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                momNameKeyReleased(evt);
            }
        });
        p2.add(momName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 430, 34));

        dadName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dadName.setToolTipText("name of applicant's father.");
        dadName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dadNameActionPerformed(evt);
            }
        });
        dadName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dadNameKeyReleased(evt);
            }
        });
        p2.add(dadName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 430, 34));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel17.setText("   Contact Info");
        jLabel17.setOpaque(true);
        p2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 151, 34));

        phone1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        phone1.setToolTipText("10 digit phone number.");
        phone1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phone1ActionPerformed(evt);
            }
        });
        phone1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phone1KeyPressed(evt);
            }
        });
        p2.add(phone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 430, 34));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel25.setText("    D.O.B.");
        jLabel25.setAlignmentY(2.0F);
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel25.setOpaque(true);
        jLabel25.setRequestFocusEnabled(false);
        p2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 225, 151, 34));

        imglabel.setBackground(new java.awt.Color(255, 255, 255));
        imglabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        imglabel.setForeground(new java.awt.Color(255, 0, 51));
        imglabel.setText("Upload your passport photo.");
        imglabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imglabel.setOpaque(true);
        imglabel.setPreferredSize(new java.awt.Dimension(150, 180));
        imglabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imglabelMouseClicked(evt);
            }
        });
        p2.add(imglabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 0, 240, 290));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Upload");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        p2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 290, 140, 40));
        p2.add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 430, 30));

        jPanel3.add(p2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 205, 1352, 337));

        p3.setBackground(new java.awt.Color(204, 204, 255));
        p3.setOpaque(false);
        p3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setBackground(new java.awt.Color(255, 204, 255));
        jLabel18.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Personal Details");
        p3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 830, -1));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel19.setText("  Contact Info");
        jLabel19.setOpaque(true);
        p3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 54, 138, 38));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel20.setText("  Email Id");
        jLabel20.setOpaque(true);
        p3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 131, 138, 38));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel21.setText("  Aadhar Number");
        jLabel21.setOpaque(true);
        p3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 203, 138, 44));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel22.setText("   State");
        jLabel22.setOpaque(true);
        jLabel22.setPreferredSize(new java.awt.Dimension(94, 44));
        p3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 131, 136, 38));

        phone2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        phone2.setToolTipText("10 digit phone number.");
        phone2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phone2KeyPressed(evt);
            }
        });
        p3.add(phone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 55, 338, 45));

        email.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        email.setToolTipText("enter email id.");
        p3.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 132, 338, 45));

        adhar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        adhar.setToolTipText("enter 12  digit adhar number.");
        adhar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                adharKeyPressed(evt);
            }
        });
        p3.add(adhar, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 203, 338, 45));

        gender.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----NONE-----", "Male", "Female", "Other" }));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });
        p3.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(919, 54, 345, 45));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel23.setText("  Gender");
        jLabel23.setOpaque(true);
        jLabel23.setPreferredSize(new java.awt.Dimension(94, 44));
        p3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 54, 138, 38));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel24.setText("   City");
        jLabel24.setOpaque(true);
        jLabel24.setPreferredSize(new java.awt.Dimension(94, 44));
        p3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 203, 136, 38));

        state.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        state.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----NONE-----", "Andhra_Pradesh", "Arunachal_Pradesh", "Assam", "Bihar", "Chhattisgarh", "Delhi", "Goa", "Gujarat", "Haryana", "Himachal_Pradesh", "Jammu_Kashmir", "Jharkhand", "Karnataka", "Kerala", "Lakshadweep", "Madhya_Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil_Nadu", "Telangana", "Tripura", "Uttar_Pradesh", "Uttarakhand", "West_Bengal" }));
        state.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateActionPerformed(evt);
            }
        });
        p3.add(state, new org.netbeans.lib.awtextra.AbsoluteConstraints(919, 131, 345, 45));

        city.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        city.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----NONE-----", "Male", "Female", "Other" }));
        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });
        p3.add(city, new org.netbeans.lib.awtextra.AbsoluteConstraints(919, 203, 345, 45));

        jPanel3.add(p3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 554, 1352, 264));

        p4.setBackground(new java.awt.Color(153, 255, 204));
        p4.setOpaque(false);
        p4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("   Address");
        jLabel27.setOpaque(true);
        p4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 73, 138, 38));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel28.setText("  City");
        jLabel28.setOpaque(true);
        p4.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 132, 138, 32));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel30.setText("   Pin Code");
        jLabel30.setOpaque(true);
        p4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 186, 138, 38));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel29.setText("   State");
        jLabel29.setOpaque(true);
        p4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 243, 136, 38));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("   Address");
        jLabel31.setOpaque(true);
        p4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 73, 136, 38));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel32.setText("   City");
        jLabel32.setOpaque(true);
        p4.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 132, 136, 32));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel33.setText("   Pin Code");
        jLabel33.setOpaque(true);
        p4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 186, 136, 38));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel34.setText("   State");
        jLabel34.setOpaque(true);
        p4.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 243, 138, 38));

        address1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        address1.setToolTipText("Your resident address.");
        address1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address1ActionPerformed(evt);
            }
        });
        p4.add(address1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 74, 338, 38));

        city1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        city1.setToolTipText("City name.");
        city1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                city1ActionPerformed(evt);
            }
        });
        p4.add(city1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 130, 338, 38));

        pin1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pin1.setToolTipText("Pin code.");
        pin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pin1ActionPerformed(evt);
            }
        });
        pin1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pin1KeyPressed(evt);
            }
        });
        p4.add(pin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 187, 338, 38));

        state1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        state1.setToolTipText("State name.");
        state1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state1ActionPerformed(evt);
            }
        });
        p4.add(state1, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 240, 338, 38));

        address2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        address2.setToolTipText("Your resident address.");
        address2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address2ActionPerformed(evt);
            }
        });
        p4.add(address2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 74, 342, 38));

        city2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        city2.setToolTipText("City name.");
        city2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                city2ActionPerformed(evt);
            }
        });
        p4.add(city2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 130, 342, 38));

        pin2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pin2.setToolTipText("Pin code.");
        pin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pin2ActionPerformed(evt);
            }
        });
        pin2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pin2KeyPressed(evt);
            }
        });
        p4.add(pin2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 187, 342, 38));

        state2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        state2.setToolTipText("State name.");
        state2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state2ActionPerformed(evt);
            }
        });
        p4.add(state2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 244, 342, 38));

        jLabel26.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Local Address");
        jLabel26.setRequestFocusEnabled(false);
        p4.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 3, 680, 40));

        jLabel35.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Permanent Address");
        p4.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(673, 3, 673, 40));

        jCheckBox1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jCheckBox1.setText("Copy local address.");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        p4.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 10, 150, 30));

        jPanel3.add(p4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 830, 1341, 317));

        submit.setBackground(new java.awt.Color(51, 204, 0));
        submit.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setText("Submit");
        submit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        submit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel3.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(557, 1484, 184, 56));

        p5.setBackground(new java.awt.Color(255, 255, 255));
        p5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("     High School");
        jLabel2.setOpaque(true);
        p5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 114, 140, 37));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("     Intermediate");
        jLabel3.setOpaque(true);
        p5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 167, 140, 37));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("     Graduation");
        jLabel4.setOpaque(true);
        p5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 216, 140, 37));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("     Qualification");
        jLabel5.setOpaque(true);
        p5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 63, 140, 37));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("  Total Marks");
        jLabel7.setOpaque(true);
        p5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 60, 120, 37));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("   Roll Number");
        jLabel8.setOpaque(true);
        p5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 134, 37));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("   College Name");
        jLabel9.setOpaque(true);
        p5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 134, 37));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Percent/CGP");
        jLabel12.setOpaque(true);
        p5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 60, 130, 37));

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Obtained Marks");
        jLabel37.setOpaque(true);
        p5.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 60, 140, 37));

        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Year of passing.");
        jLabel38.setOpaque(true);
        p5.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 60, 140, 37));

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel39.setText("  Course");
        jLabel39.setOpaque(true);
        p5.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 100, 37));

        jLabel40.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel40.setText("      10");
        jLabel40.setOpaque(true);
        p5.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 114, 100, 37));

        jLabel41.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel41.setText("      12");
        jLabel41.setOpaque(true);
        p5.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 167, 100, 37));

        grad.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        grad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "BCA", "BBA", "BSc", "B Com", "BA (Maths)", "B Tech" }));
        p5.add(grad, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 216, 100, 37));

        rollG.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rollG.setToolTipText("10th roll number.");
        p5.add(rollG, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 216, 134, 37));

        perG.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        perG.setToolTipText("10th roll number.");
        perG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                perGFocusGained(evt);
            }
        });
        perG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                perGMouseClicked(evt);
            }
        });
        perG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perGActionPerformed(evt);
            }
        });
        p5.add(perG, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 216, 134, 37));
        perG.setEditable(false);

        roll12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        roll12.setToolTipText("10th roll number.");
        p5.add(roll12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 167, 134, 37));

        roll10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        roll10.setToolTipText("10th roll number.");
        p5.add(roll10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 114, 134, 37));

        sch10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        sch10.setToolTipText("10th roll number.");
        p5.add(sch10, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 114, 134, 37));

        sch12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        sch12.setToolTipText("10th roll number.");
        p5.add(sch12, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 167, 134, 37));

        schG.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        schG.setToolTipText("10th roll number.");
        p5.add(schG, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 216, 134, 37));

        om10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        om10.setToolTipText("10th roll number.");
        om10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                om10KeyPressed(evt);
            }
        });
        p5.add(om10, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 114, 140, 37));

        om12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        om12.setToolTipText("10th roll number.");
        om12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                om12KeyPressed(evt);
            }
        });
        p5.add(om12, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 167, 140, 37));

        omG.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        omG.setToolTipText("10th roll number.");
        omG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                omGKeyPressed(evt);
            }
        });
        p5.add(omG, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 216, 140, 37));

        tm10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tm10.setToolTipText("10th roll number.");
        tm10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tm10KeyPressed(evt);
            }
        });
        p5.add(tm10, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 114, 120, 37));

        tm12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tm12.setToolTipText("10th roll number.");
        tm12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tm12KeyPressed(evt);
            }
        });
        p5.add(tm12, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 167, 120, 37));

        tmG.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tmG.setToolTipText("10th roll number.");
        tmG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tmGKeyPressed(evt);
            }
        });
        p5.add(tmG, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 216, 120, 37));

        y10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        y10.setToolTipText("10th roll number.");
        y10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                y10KeyPressed(evt);
            }
        });
        p5.add(y10, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 114, 140, 37));

        y12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        y12.setToolTipText("10th roll number.");
        y12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                y12KeyPressed(evt);
            }
        });
        p5.add(y12, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 167, 140, 37));

        yG.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        yG.setToolTipText("10th roll number.");
        yG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yGKeyPressed(evt);
            }
        });
        p5.add(yG, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 216, 140, 37));

        per10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        per10.setToolTipText("10th roll number.");
        per10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                per10FocusGained(evt);
            }
        });
        per10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                per10MouseClicked(evt);
            }
        });
        p5.add(per10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 114, 134, 37));
        per10.setEditable(false);

        per12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        per12.setToolTipText("10th roll number.");
        per12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                per12FocusGained(evt);
            }
        });
        per12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                per12MouseClicked(evt);
            }
        });
        p5.add(per12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 167, 134, 37));
        per12.setEditable(false);

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("Qualification");
        p5.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 450, 35));

        jPanel3.add(p5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1174, 1317, 264));

        jScrollPane1.setViewportView(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.getVerticalScrollBar().setUnitIncrement(15);
        jScrollPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseActionPerformed

    private void phone1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phone1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phone1ActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderActionPerformed

    private void stateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateActionPerformed
        // TODO add your handling code here:
        state_selected = state.getSelectedItem().toString();
        state1.setText(state_selected);
        state2.setText(state_selected);
        city.removeAllItems();
        city.addItem("----NONE-----");
        String sql = "select " + state_selected + " from indian_state";
        try 
        {
            stm = con.prepareStatement(sql);
            data = stm.executeQuery();
            while(data.next())
            {
                if(!data.getString(1).equals(""))
                {
                    city.addItem(data.getString(1));
                }
            }
            
        } catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this,"Error in data base connection.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_stateActionPerformed

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:\
        Object obj = city.getSelectedItem();
        if(obj == null){
            return;
        }
        city_selected = obj.toString();
        if(!(city_selected.equals("----NONE-----" ))){
            city1.setText(city_selected);
            city2.setText(city_selected);
        }
        
    }//GEN-LAST:event_cityActionPerformed

    private void address1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address1ActionPerformed

    private void city1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_city1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_city1ActionPerformed

    private void pin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pin1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pin1ActionPerformed

    private void state1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state1ActionPerformed

    private void address2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address2ActionPerformed

    private void city2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_city2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_city2ActionPerformed

    private void pin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pin2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pin2ActionPerformed

    private void state2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state2ActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed

        boolean output = check_empty();
       
        
        if(output)
        {        
            int respond = JOptionPane.showConfirmDialog(this,"Do you want to continue?\n Remember if submitted you cannot edit it furthermore","Alert",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(respond == JOptionPane.YES_OPTION)
            {
                submit_data();
                JOptionPane.showMessageDialog(this, "Thank you for your response.");
                dispose();
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void dadNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dadNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dadNameActionPerformed

    private void imglabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imglabelMouseClicked
        // TODO add your handling code here:
        //System.out.println("Upload");
        JFileChooser browse_img = new JFileChooser();
        browse_img.showOpenDialog(null);
        File file = browse_img.getSelectedFile();
        if(file == null){
            return;
        }
        String path = file.getAbsoluteFile().toString();
        if(path.equals("")){
            return;
        }
        try
        {
            BufferedImage buffer = ImageIO.read(new File(path));
            Image img = buffer.getScaledInstance(imglabel.getWidth(), imglabel.getHeight(),Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            ips = new FileInputStream(new File(path));
            imglabel.setIcon(icon);
        }
        catch(Exception e)
        {
            JOptionPane.showConfirmDialog(this,"Error in loading image","Alert",JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_imglabelMouseClicked

    private void dobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobMouseClicked
        // TODO add your handling code here:
        if(dob == null)
        {
            return;
        }
         DOB = (dob.getDate().getDate() +" : " +  dob.getDate().getMonth() +" : " + dob.getCalendar().getWeekYear());
         Year_DOB = dob.getCalendar().getWeekYear();
    }//GEN-LAST:event_dobMouseClicked

    private void phone1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone1KeyPressed
        // TODO add your handling code here:
        String str = phone1.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                phone1.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 10){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                phone1.setText(phone1.getText() + "" + evt.getKeyChar());
            }
        }
        phone1.setEditable(false);
    }//GEN-LAST:event_phone1KeyPressed

    private void phone2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone2KeyPressed
        // TODO add your handling code here:
        String str = phone2.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                phone2.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 10){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                phone2.setText(phone2.getText() + "" + evt.getKeyChar());
            }
        }
        phone2.setEditable(false);
    }//GEN-LAST:event_phone2KeyPressed

    private void adharKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adharKeyPressed
        // TODO add your handling code here:
        String str = adhar.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                adhar.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 12){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                adhar.setText(adhar.getText() + "" + evt.getKeyChar());
            }
        }
        adhar.setEditable(false);
    }//GEN-LAST:event_adharKeyPressed

    private void pin1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pin1KeyPressed
        // TODO add your handling code here:
        String str = pin1.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                pin1.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 6){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                pin1.setText(pin1.getText() + "" + evt.getKeyChar());
            }
        }
        pin1.setEditable(false);
    }//GEN-LAST:event_pin1KeyPressed

    private void pin2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pin2KeyPressed
        // TODO add your handling code here:
        String str = pin2.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                pin2.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 6){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                pin2.setText(pin2.getText() + "" + evt.getKeyChar());
            }
        }
        pin2.setEditable(false);
    }//GEN-LAST:event_pin2KeyPressed

    private void stuNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stuNameKeyReleased
        // TODO add your handling code here:
        int pos = stuName.getCaretPosition();
        stuName.setText(stuName.getText().toUpperCase());
        stuName.setCaretPosition(pos);
    }//GEN-LAST:event_stuNameKeyReleased

    private void momNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_momNameKeyReleased
        // TODO add your handling code here:
        int pos = momName.getCaretPosition();
        momName.setText(momName.getText().toUpperCase());
        momName.setCaretPosition(pos);
    }//GEN-LAST:event_momNameKeyReleased

    private void dadNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dadNameKeyReleased
        // TODO add your handling code here:
        int pos = dadName.getCaretPosition();
        dadName.setText(dadName.getText().toUpperCase());
        dadName.setCaretPosition(pos);
    }//GEN-LAST:event_dadNameKeyReleased

    private void perGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perGActionPerformed

    private void om10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_om10KeyPressed
        // TODO add your handling code here:
        String str = om10.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                om10.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 3){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                om10.setText(om10.getText() + "" + evt.getKeyChar());
            }
        }
        om10.setEditable(false);
    }//GEN-LAST:event_om10KeyPressed

    private void om12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_om12KeyPressed
        // TODO add your handling code here:
        String str = om12.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                om12.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 3){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                om12.setText(om12.getText() + "" + evt.getKeyChar());
            }
        }
        om12.setEditable(false);
    }//GEN-LAST:event_om12KeyPressed

    private void omGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omGKeyPressed
        // TODO add your handling code here:
        String str = omG.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                omG.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 3){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                omG.setText(omG.getText() + "" + evt.getKeyChar());
            }
        }
        omG.setEditable(false);
    }//GEN-LAST:event_omGKeyPressed

    private void tm10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tm10KeyPressed
        // TODO add your handling code here:
        String str = tm10.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                tm10.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 3){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                tm10.setText(tm10.getText() + "" + evt.getKeyChar());
            }
        }
        tm10.setEditable(false);
    }//GEN-LAST:event_tm10KeyPressed

    private void tm12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tm12KeyPressed
        // TODO add your handling code here:
        String str = tm12.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                tm12.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 3){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                tm12.setText(tm12.getText() + "" + evt.getKeyChar());
            }
        }
        tm12.setEditable(false);
    }//GEN-LAST:event_tm12KeyPressed

    private void tmGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tmGKeyPressed
        // TODO add your handling code here:
        String str = tmG.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                tmG.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() < 3){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                tmG.setText(tmG.getText() + "" + evt.getKeyChar());
            }
        }
        tmG.setEditable(false);
    }//GEN-LAST:event_tmGKeyPressed

    private void y10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y10KeyPressed
        // TODO add your handling code here:
        String str = y10.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                y10.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() <4 ){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                y10.setText(y10.getText() + "" + evt.getKeyChar());
            }
        }
        y10.setEditable(false);
    }//GEN-LAST:event_y10KeyPressed

    private void y12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y12KeyPressed
        // TODO add your handling code here:
        String str = y12.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                y12.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() <4 ){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                y12.setText(y12.getText() + "" + evt.getKeyChar());
            }
        }
        y12.setEditable(false);
    }//GEN-LAST:event_y12KeyPressed

    private void yGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yGKeyPressed
        // TODO add your handling code here:
        String str = yG.getText();
        if(evt.getExtendedKeyCode() == KeyEvent.VK_DELETE ||  evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
            if(str.length() > 0)
            {
                yG.setText(str.substring(0,str.length()-1));
            }
        }
        
        if(str.length() <4 ){
            if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
            {
               // phone1.setEditable(true);
                yG.setText(yG.getText() + "" + evt.getKeyChar());
            }
        }
        yG.setEditable(false);
    }//GEN-LAST:event_yGKeyPressed

    private void per10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_per10MouseClicked
        // TODO add your handling code here:
        if(om10.getText().length() > 0 && tm10.getText().length() > 0)
        {
            double om = Double.parseDouble(om10.getText());
            double tm = Double.parseDouble(tm10.getText());
            if(om <= tm)
            {
                per10.setText("" + (om*100)/tm);
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid data of HighSchool.","Error",JOptionPane.ERROR_MESSAGE);                
            }        
        }
        if(y10.getText().length() > 0){
            int om;
            om = Integer.parseInt(y10.getText());
            if(om < Year_DOB)
            {
                JOptionPane.showMessageDialog(this,"Invalid passing year of HighSchool.","Error",JOptionPane.ERROR_MESSAGE);           
            }
        }        
    }//GEN-LAST:event_per10MouseClicked

    private void per12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_per12MouseClicked
        // TODO add your handling code here:
        if(om12.getText().length() > 0 && tm12.getText().length() > 0)
        {
            double om = Double.parseDouble(om12.getText());
            double tm = Double.parseDouble(tm12.getText());
            if(om <= tm)
            {
                per12.setText("" + (om*100)/tm);
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid data of Intermediate.","Error",JOptionPane.ERROR_MESSAGE);                
            }
        }
        if(y12.getText().length() > 0){
            int om;
            om = Integer.parseInt(y12.getText());
            if(om < Year_DOB)
            {
                JOptionPane.showMessageDialog(this,"Invalid passing year of Intermediate.","Error",JOptionPane.ERROR_MESSAGE);           
            }
        }
    }//GEN-LAST:event_per12MouseClicked

    private void perGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perGMouseClicked
        // TODO add your handling code here:
        if(omG.getText().length() > 0 && tmG.getText().length() > 0)
        {
            double om = Double.parseDouble(omG.getText());
            double tm = Double.parseDouble(tmG.getText());
            if(om <= tm)
            {
                perG.setText("" + (om*100)/tm);
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid data of Graduation.","Error",JOptionPane.ERROR_MESSAGE);                
            }
            
        }
        if(yG.getText().length() > 0){
            int om;
            om = Integer.parseInt(yG.getText());
            if(om < Year_DOB)
            {
                JOptionPane.showMessageDialog(this,"Invalid passing year of Graduation.","Error",JOptionPane.ERROR_MESSAGE);           
            }
        }
    }//GEN-LAST:event_perGMouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected())
        {
            address2.setText(address1.getText());
            pin2.setText(pin1.getText());
        }        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser browse_img = new JFileChooser();
        browse_img.showOpenDialog(null);
        File file = browse_img.getSelectedFile();
        if(file == null){
            return;
        }
        String path = file.getAbsoluteFile().toString();
        if(path.equals("")){
            return;
        }
        try
        {
            BufferedImage buffer = ImageIO.read(new File(path));
            Image img = buffer.getScaledInstance(imglabel.getWidth(), imglabel.getHeight(),Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            ips = new FileInputStream(new File(path));
            imglabel.setIcon(icon);
        }
        catch(Exception e)
        {
            JOptionPane.showConfirmDialog(this,"Error in loading image","Alert",JOptionPane.OK_OPTION);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void stuNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stuNameFocusGained
        // TODO add your handling code here:
        System.out.println("OKKK");
    }//GEN-LAST:event_stuNameFocusGained

    private void per10FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_per10FocusGained
        // TODO add your handling code here:
        if(om10.getText().length() > 0 && tm10.getText().length() > 0)
        {
            double om = Double.parseDouble(om10.getText());
            double tm = Double.parseDouble(tm10.getText());
            if(om <= tm)
            {
                per10.setText("" + (om*100)/tm);
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid data of HighSchool.","Error",JOptionPane.ERROR_MESSAGE);                
            }        
        }
        if(y10.getText().length() > 0){
            int om;
            om = Integer.parseInt(y10.getText());
            if(om < Year_DOB)
            {
                JOptionPane.showMessageDialog(this,"Invalid passing year of HighSchool.","Error",JOptionPane.ERROR_MESSAGE);           
            }
        } 
    }//GEN-LAST:event_per10FocusGained

    private void per12FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_per12FocusGained
        // TODO add your handling code here:
        if(om12.getText().length() > 0 && tm12.getText().length() > 0)
        {
            double om = Double.parseDouble(om12.getText());
            double tm = Double.parseDouble(tm12.getText());
            if(om <= tm)
            {
                per12.setText("" + (om*100)/tm);
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid data of Intermediate.","Error",JOptionPane.ERROR_MESSAGE);                
            }
        }
        if(y12.getText().length() > 0){
            int om;
            om = Integer.parseInt(y12.getText());
            if(om < Year_DOB)
            {
                JOptionPane.showMessageDialog(this,"Invalid passing year of Intermediate.","Error",JOptionPane.ERROR_MESSAGE);           
            }
        }
    }//GEN-LAST:event_per12FocusGained

    private void perGFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_perGFocusGained
        // TODO add your handling code here:
        if(omG.getText().length() > 0 && tmG.getText().length() > 0)
        {
            double om = Double.parseDouble(omG.getText());
            double tm = Double.parseDouble(tmG.getText());
            if(om <= tm)
            {
                perG.setText("" + (om*100)/tm);
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Invalid data of Graduation.","Error",JOptionPane.ERROR_MESSAGE);                
            }
            
        }
        if(yG.getText().length() > 0){
            int om;
            om = Integer.parseInt(yG.getText());
            if(om < Year_DOB)
            {
                JOptionPane.showMessageDialog(this,"Invalid passing year of Graduation.","Error",JOptionPane.ERROR_MESSAGE);           
            }
        }
    }//GEN-LAST:event_perGFocusGained
    private void set_logo(){
        try {
            BufferedImage buffer = ImageIO.read(new File("D:\\college_mgt\\src\\app_pack\\clglogo.png"));
            Image newimg = buffer.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(newimg);
            jLabel1.setIcon(icon);
        } catch (IOException ex) 
        {
            
        }
    }
    
    private void submit_data()
    {
        try 
        {
            String sql = "insert into student_data(course , photo ,applicant_name,mom_name ,dad_name ,  dob ,phone1,phone2,email,adhar,gender,state,city "
                    + " ,pincode ,address, roll_10 ,year_10, percnet_10, roll_12, year_12,percnet_12, roll_grad , year_grad , percnetgrad,grad) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            stm = con.prepareStatement(sql);
            stm.setString(1,course.getSelectedItem().toString());
            stm.setBlob(2,ips);
            stm.setString(3,stuName.getText());
            stm.setString(4,momName.getText());
            stm.setString(5,dadName.getText());
            stm.setString(6,DOB);
            stm.setString(7,phone1.getText());
            stm.setString(8,phone2.getText());
            stm.setString(9,email.getText());
            stm.setString(10,adhar.getText());
            stm.setString(11,gender.getSelectedItem().toString());
            stm.setString(12,state_selected);
            stm.setString(13,city_selected);
            stm.setString(14,pin1.getText());
            stm.setString(15,address1.getText());
            stm.setString(16,roll10.getText());
            stm.setString(17,y10.getText());
            stm.setString(18,per10.getText());
            stm.setString(19,roll12.getText());
            stm.setString(20,y12.getText());
            stm.setString(21,per12.getText());
            if(grad.getSelectedItem().toString().equals("NONE"))
            {
                if(rollG.getText().equals("") && yG.getText().equals("") && perG.getText().equals(""))
                {
                    stm.setString(22,"null");
                    stm.setString(23,"null");
                    stm.setString(24,"null");
                    stm.setString(25, "null");
                }           
            }
            else
            {
                stm.setString(22,rollG.getText());
                stm.setString(23,yG.getText());
                stm.setString(24,perG.getText());
                stm.setString(25, grad.getSelectedItem().toString());
            }
            stm.execute();
        }
        catch (Exception e) 
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"Error in uploading data.","Error",JOptionPane.ERROR_MESSAGE);    
        }
        
    }
    private boolean chkTbl()
    {
        if(roll10.getText().equals("") || y10.getText().equals("") || per10.getText().equals("") || sch10.getText().equals("") || om10.getText().equals("") || tm10.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Qualification fiels cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        int om;
        om = Integer.parseInt(om10.getText());
        if(om < Year_DOB)
        {
            JOptionPane.showMessageDialog(this,"Invalid passing year of HighSchool.","Error",JOptionPane.ERROR_MESSAGE);
            return false;            
        }
        if(roll12.getText().equals("") || y12.getText().equals("") || per12.getText().equals("") || sch12.getText().equals("") || om12.getText().equals("") || tm12.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Qualification fiels cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        om = Integer.parseInt(om12.getText());
        if(om < Year_DOB)
        {
            JOptionPane.showMessageDialog(this,"Invalid passing year of Intermediate..","Error",JOptionPane.ERROR_MESSAGE);
            return false;            
        }
        
        if(Integer.parseInt(om10.getText()) > Integer.parseInt(om12.getText()))
        {
            JOptionPane.showMessageDialog(this,"Invalid passing year provided.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
            
        }
        if(grad.getSelectedItem().equals("NONE"))
        {
            if(rollG.getText().equals("") && yG.getText().equals("") && perG.getText().equals("") && schG.getText().equals("")&& omG.getText().equals("") && tmG.getText().equals("")){
                //om = Integer.parseInt(omG.getText());
//                if(om < Year_DOB)
//                {
//                    JOptionPane.showMessageDialog(this,"Invalid passing year of Graduation..","Error",JOptionPane.ERROR_MESSAGE);
//                    return false;
//
//                }
                if(Integer.parseInt(y10.getText()) > Integer.parseInt(y12.getText()))
                {
                    JOptionPane.showMessageDialog(this,"Invalid passing year provided for highschool and intermediate.","Error",JOptionPane.ERROR_MESSAGE);
                    return false;

                }
                return true;
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Qualification fiels cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }else
        {
            if(!(rollG.getText().equals("") && yG.getText().equals("") && perG.getText().equals("") && schG.getText().equals("")&& omG.getText().equals("") && tmG.getText().equals("")))
            {
                om = Integer.parseInt(yG.getText());
                if(om < Year_DOB)
                {
                    JOptionPane.showMessageDialog(this,"Invalid passing year of Graduation..","Error",JOptionPane.ERROR_MESSAGE);
                    return false;

                }
                if(Integer.parseInt(y12.getText()) > Integer.parseInt(yG.getText()))
                {
                    JOptionPane.showMessageDialog(this,"Invalid passing year provided.","Error",JOptionPane.ERROR_MESSAGE);
                    return false;

                }
                return true;
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Qualification fiels cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    }
    
    private  boolean check_empty()
    {
        
        if(ips == null)
        {
            JOptionPane.showMessageDialog(this,"Upload your image.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(stuName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Student Name cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        
        
        if(momName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Mother's Name cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(dadName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Father's Name cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(dob == null)
        {
            return  false;
        }
        else{
            DOB = (dob.getDate().getDate() +" : " +  dob.getDate().getMonth() +" : " + dob.getCalendar().getWeekYear());
        }
        if("".equals(DOB)){
            JOptionPane.showMessageDialog(this,"Date of birth cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }             
        if(phone1.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Contact Info cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }        
        if(phone2.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Contact Info cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }       
        if(phone1.getText().length() < 10 || phone2.getText().length() < 10)
        {
            JOptionPane.showMessageDialog(this,"Invalid phone number.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(email.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Email cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(adhar.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Adhar Number cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(adhar.getText().length() < 12)
        {
            JOptionPane.showMessageDialog(this,"Invalid  adhar number.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(gender.getSelectedItem().equals("----NONE-----")){
            JOptionPane.showMessageDialog(this,"Gender cannot be NONE.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(state.getSelectedItem().equals("----NONE-----")){
            JOptionPane.showMessageDialog(this,"Gender cannot be NONE.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(city.getSelectedItem().equals("----NONE-----")){
            JOptionPane.showMessageDialog(this,"Gender cannot be NONE.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(address1.getText().equals("----NONE-----")|| address2.getText().equals("----NONE-----")){
            JOptionPane.showMessageDialog(this,"Address cannot be NONE.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!address1.getText().equals(address2.getText())){
            JOptionPane.showMessageDialog(this,"Provided address are not same.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(pin1.getText().equals("----NONE-----")|| pin2.getText().equals("----NONE-----")){
            JOptionPane.showMessageDialog(this,"Gender cannot be NONE.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!pin1.getText().equals(pin2.getText())){
            JOptionPane.showMessageDialog(this,"Provided Pin code are not same.","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }        
        return chkTbl();
    }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdmissionForm obj = new AdmissionForm();
                obj.setVisible(true);
                obj.set_logo();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address1;
    private javax.swing.JTextField address2;
    private javax.swing.JTextField adhar;
    private javax.swing.JComboBox<String> city;
    private javax.swing.JTextField city1;
    private javax.swing.JTextField city2;
    private javax.swing.JComboBox<String> course;
    private javax.swing.JTextField dadName;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField email;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JComboBox<String> grad;
    private javax.swing.JLabel imglabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField momName;
    private javax.swing.JTextField om10;
    private javax.swing.JTextField om12;
    private javax.swing.JTextField omG;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JPanel p3;
    private javax.swing.JPanel p4;
    private javax.swing.JPanel p5;
    private javax.swing.JTextField per10;
    private javax.swing.JTextField per12;
    private javax.swing.JTextField perG;
    private javax.swing.JTextField phone1;
    private javax.swing.JTextField phone2;
    private javax.swing.JTextField pin1;
    private javax.swing.JTextField pin2;
    private javax.swing.JTextField roll10;
    private javax.swing.JTextField roll12;
    private javax.swing.JTextField rollG;
    private javax.swing.JTextField sch10;
    private javax.swing.JTextField sch12;
    private javax.swing.JTextField schG;
    private javax.swing.JComboBox<String> state;
    private javax.swing.JTextField state1;
    private javax.swing.JTextField state2;
    private javax.swing.JTextField stuName;
    private javax.swing.JButton submit;
    private javax.swing.JTextField tm10;
    private javax.swing.JTextField tm12;
    private javax.swing.JTextField tmG;
    private javax.swing.JTextField y10;
    private javax.swing.JTextField y12;
    private javax.swing.JTextField yG;
    // End of variables declaration//GEN-END:variables

    private void setIconImage() {
       setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("a1.png")));
    }
}
